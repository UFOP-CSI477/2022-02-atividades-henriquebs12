// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Tabela que armazena as informações dos alunos
model Aluno {
  id       Int        @id @default(autoincrement())
  nome     String
  semestre Semestre[] // Relacionamento com a tabela Semestre
}

// Tabela que armazena as informações dos semestres
model Semestre {
  id                 Int                  @id @default(autoincrement())
  nome               String @unique
  aluno              Aluno[] // Relacionamento com a tabela Aluno
  disciplinaSemestre DisciplinaSemestre[]
}

// Tabela que armazena as informações das disciplinas
model Disciplina {
  id                 Int                  @id @default(autoincrement())
  nome               String
  nome_curto         String // nome curto para que seja bem visualizado na grade de horários
  disciplinaSemestre DisciplinaSemestre[]
}

// Tabela que relaciona  as informações das disciplinas em um determinado semestre
model DisciplinaSemestre {
  id           Int        @id @default(autoincrement())
  sala         String
  diaSemana    String // dia da semana que a disciplina acontece
  horario      String // horário que a disciplina acontece
  disciplina   Disciplina @relation(fields: [disciplinaId], references: [id])
  disciplinaId Int
  semestre     Semestre   @relation(fields: [semestreId], references: [id])
  semestreId   Int
}

// Tabela que armazena as informações das linhas de ônibus
model Linha {
  id            Int                       @id @default(autoincrement())
  nome          String @unique
  tempo_ate_ponto_controle Int
  // Relacionamento com a tabela PartidaLinha, para armazenar os horários de partida da linha
  partidaLinha  PartidaLinha[]
}

// Tabela que armazena os horários de partida de cada linha de ônibus em um determinado dia
model PartidaLinha {
  id      Int    @id @default(autoincrement())
  dia     String // dia da semana (ex: segunda, terca, quarta, etc.)
  horario String // horários de partida da linha nesse dia (ex: 14:00, 16:00)
  linha   Linha  @relation(fields: [linhaId], references: [id])
  linhaId Int
}